#!/usr/bin/env python

import time

import RPi.GPIO as GPIO
import paho.mqtt.client as mqtt

# GPIO17	Push button switch
# GPIO23	Chirp
# GPIO27	Button light


def on_connect(client, userdata, flags, rc):
    print("Connected with result code " + str(rc))
    client.subscribe("/public/cuckoo/chirp")
    client.subscribe("/public/cuckoo/lamp")


def on_message(client, userdata, msg):
    if msg.topic == "/public/cuckoo/chirp":
        GPIO.setup(23, GPIO.OUT, initial=GPIO.LOW)
        GPIO.output(23, 1)

        time.sleep(0.01)

        GPIO.output(23, 0)
        GPIO.setup(23, GPIO.IN)
    elif msg.topic == "/public/cuckoo/lamp":
        if msg.payload == "off":
            GPIO.output(27, 0)
        elif msg.payload == "on":
            GPIO.output(27, 1)


def main():
    GPIO.setmode(GPIO.BCM)

    GPIO.setup(17, GPIO.IN, pull_up_down=GPIO.PUD_UP)
    GPIO.setup(27, GPIO.OUT, initial=GPIO.LOW)

    client = mqtt.Client()
    client.on_connect = on_connect
    client.on_message = on_message

    client.connect("mqtt.bitraf.no", 1883, 60)

    client.loop_start()

    last_button = -1
    while True:
        time.sleep(0.01)

        button = 1 - GPIO.input(17)

        if button == last_button:
            continue
        last_button = button

        if button == 0:
            client.publish("/public/cuckoo/button/released", "")
            client.publish("/public/cuckoo/button/state", "released")
        elif button == 1:
            client.publish("/public/cuckoo/button/pressed", "")
            client.publish("/public/cuckoo/button/state", "pressed")

if __name__ == "__main__":
    main()
